name: CI

on:
  push:
    branches:
    - master

env:
  app: netping
  service: frontend
  registry: docker.pkg.github.com
  actor: ${{ github.actor }}

  TF_INPUT: 0
  TF_IN_AUTOMATION: 1
  TF_VAR_do_token: ${{ secrets.do_token }}
  TF_VAR_letsencrypt_url: https://acme-staging-v02.api.letsencrypt.org/directory
  #TF_VAR_letsencrypt_url: https://acme-v02.api.letsencrypt.org/directory
  TF_VAR_domain: softec.pw
  TF_VAR_app: netping
  TF_VAR_email: ${{ secrets.email }}

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: set env
      run: |
        ver=$(git rev-parse --short HEAD)
        echo "::set-env name=ver::$ver"
        echo "::set-env name=tag::$registry/${{ github.repository }}/$service:$ver"
        sudo pip install jinja2-cli

    - name: build image
      run: |
        cd $service
        docker build . --tag $tag --build-arg app=$app --build-arg ver=$ver
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login $registry -u $actor --password-stdin
        docker push $tag

    - name: tf init
      env:
        be_token: ${{ secrets.be_token }}
      run: |
        cd terraform
        ./init.sh

    - name: tls
      run: |
        cd terraform
        terraform apply -auto-approve
        echo "::set-env name=crt::$(terraform output crt)"
        echo "::set-env name=key::$(terraform output key)"

    - name: deploy
      env:
        K8S_SERVER: ${{ secrets.K8S_SERVER }}
        K8S_USER: ${{ secrets.K8S_USER }}
        K8S_PASS: ${{ secrets.K8S_PASS }}
      run: |
        cd manifest
        ./kubeconfig.sh
        ./deploy.sh
