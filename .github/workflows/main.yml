name: CI

on:
  pull_request:
    branches:
    - master
  push:
    tags:
    - "*"

env:
  app: netping
  domain: org
  TF_VAR_app: netping
  TF_VAR_domain: org
  registry: ghcr.io

  TF_INPUT: 0
  TF_IN_AUTOMATION: 1
  TF_VAR_do_token: ${{ secrets.do_token }}
  TF_VAR_letsencrypt_url: https://acme-v02.api.letsencrypt.org/directory
  TF_VAR_email: ${{ secrets.EMAIL }}

  K8S_SERVER: ${{ secrets.K8S_SERVER }}
  K8S_CA: ${{ secrets.K8S_CA }}
  K8S_CRT: ${{ secrets.K8S_CRT }}
  K8S_KEY: ${{ secrets.K8S_KEY }}

jobs:
  base:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v3 

    - name: deps
      run: sudo pip install jinja2-cli

    - name: tls and dns
      env:
        be_token: ${{ secrets.be_token }}
      run: |
        cd infra
        ./init.sh
        terraform apply -auto-approve -var="ip=${{ secrets.K8S_SERVER }}"

    - name: ingress
      run: |
        cd deploy
        ./kubeconfig.sh
        ./apply.sh

  build-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
        - web
        - whoami
        - ping
        - dns
        - send
        - uuid
        - portcheck
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 50

    - name: set env
      run: |
        parent=0
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          git fetch --tags
          parent=2
        fi
        sha=$(git rev-parse --short HEAD^$parent)
        echo "sha=$sha" >> $GITHUB_ENV
        echo "ver=$(git describe --tag)" >> $GITHUB_ENV
        echo "tag=$registry/${{ github.repository }}/${{ matrix.service }}:$sha" >> $GITHUB_ENV
        echo "email=${{ secrets.EMAIL }}" >> $GITHUB_ENV
        echo "bot_token=${{ secrets.BOT_TOKEN }}" >> $GITHUB_ENV
        sudo pip install jinja2-cli

    - name: build image
      run: |
        cd service/${{ matrix.service }}
        docker build . --tag $tag \
          --build-arg app=$app \
          --build-arg sha=$sha \
          --build-arg ver=$ver \
          --build-arg date="$(date --rfc-3339=seconds)" \
          --build-arg min="min."
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login $registry -u ${{ github.actor }} --password-stdin
        docker push $tag

    - name: deploy service
      run: |
        cd deploy
        ./kubeconfig.sh
        ./service.sh ${{ matrix.service }}
